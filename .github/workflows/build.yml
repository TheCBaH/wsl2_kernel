name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: 0 1 * * MON
  workflow_dispatch:

jobs:
  git:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        submodules: false
    - name: ID
      id: repo-key
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y%m")"
    - uses: actions/cache@v2
      id: wsl2_repo
      with:
        path: wsl2-repo
        key: wsl2-repo-${{ steps.repo-key.outputs.date }}
        restore-key: |
          wsl2-repo-${{ steps.repo-key.outputs.date }}
          wsl2-repo
    - name: git
      if: steps.wsl2_repo.outputs.cache-hit != 'true'
      run: |
        set -x
        ./git-prepare.sh
        du -sh wsl2-repo.git
        df -h
    - name: checkout
      run: |
        set -x
        cp -rl wsl2-repo.git wsl2-repo
        git -c protocol.version=2 -C wsl2-repo fetch --no-tags --depth 1 origin linux-msft-4.19.128:linux-msft-4.19.128
        git -C wsl2-repo checkout linux-msft-4.19.128

  kernel:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: kbuild.image
      run: |
        set -x
        image=$(make kbuild.image_print)
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$GITHUB_REPOSITORY/$image
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        old_id=''
        if docker pull $IMAGE_ID; then
          old_id=$(docker image inspect $IMAGE_ID --format "{{.ID}}")
        fi
        make kbuild.image DOCKER_BUILD_OPTS="--cache-from=$IMAGE_ID"
        new_id=$(docker image inspect $image --format "{{.ID}}")
        if [ "$old_id" != "$new_id" ]; then
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker tag $image $IMAGE_ID:latest
          docker push $IMAGE_ID:latest || true
          rm -rf ~/.docker
        fi
    - name: ID
      id: repo-key
      run: echo "::set-output name=date::$(/bin/date -u "+%Y%m")"
    - uses: actions/cache@v2
      id: wsl2_ccache
      with:
        path: .ccache
        key: wsl2-ccache-${{ steps.repo-key.outputs.date }}-${{ hashFiles('Makefile','custom_config.sh') }}
        restore-key: |
          wsl2-ccache-${{ steps.repo-key.outputs.date }}-${{ hashFiles('Makefile','custom_config.sh') }}
          wsl2-ccache-${{ steps.repo-key.outputs.date }}
          wsl2-ccache
    - name: git
      if: steps.wsl2_ccache.outputs.cache-hit != 'true'
      run: make kbuild.ccache-init
    - name: kbuild.config
      run: ./custom_config.sh </dev/null
    - name: kbuild.ccache
      run: make kbuild.ccache </dev/null
